-- -----------------------------------------------------
-- TASK 1 - first DELETE FROM bookings; to reset data to null
-- -----------------------------------------------------

INSERT INTO bookings (booking_id, date, table_number, customer_id)
VALUES 
    (1, '2024-02-05', 5, 1),
    (2, '2024-02-06', 3, 3),
    (3, '2024-02-07', 2, 2),
    (4, '2024-02-08', 2, 1),
    (5, '2024-02-09', 5, 4),
    (6, '2024-02-10', 6, 5),
    (7, '2024-02-11', 7, 3),
    (8, '2024-02-12', 8, 2),
    (9, '2024-02-13', 9, 7),
    (10, '2024-02-14', 10, 6),
    (11, '2024-02-15', 11, 8),
    (12, '2024-02-16', 12, 9),
    (13, '2024-02-17', 13, 10),
    (14, '2024-02-18', 14, 11),
    (15, '2024-02-19', 15, 12);

-- -----------------------------------------------------
-- TASK 2 - verify the procedure with call CheckBooking("2024-02-05", 5);
-- -----------------------------------------------------

DELIMITER //

CREATE PROCEDURE CheckBooking (
    IN bookingDate DATE,
    IN tableNumber INT
)
BEGIN
    DECLARE isBooked INT;

    -- Check if the table is already booked for the given date
    SELECT COUNT(*) INTO isBooked
    FROM bookings
    WHERE date = bookingDate AND table_number = tableNumber;

    -- Display the result
    IF isBooked > 0 THEN
        SELECT CONCAT('Table ', tableNumber, ' is already booked for ', bookingDate) AS Status;
    ELSE
        SELECT CONCAT('Table ', tableNumber, ' is available for booking on ', bookingDate) AS Status;
    END IF;
END //

DELIMITER ;

-- -----------------------------------------------------
-- TASK 3 - verify the procedure with call call AddValidBooking("2024-02-05", 5);;
-- -----------------------------------------------------

DELIMITER //

CREATE PROCEDURE AddValidBooking (
    IN bookingDate DATE,
    IN tableNumber INT
)
BEGIN
    DECLARE existingBooking INT;

    -- Start the transaction
    START TRANSACTION;

    -- Check if the table is already booked for the given date
    SELECT COUNT(*) INTO existingBooking
    FROM bookings
    WHERE date = bookingDate AND table_number = tableNumber;

    -- If the table is not already booked, insert the new booking record
    IF existingBooking = 0 THEN
        INSERT INTO bookings (date, table_number)
        VALUES (bookingDate, tableNumber);
        SELECT 'Booking successful. Table reserved.' AS Status;
    ELSE
        -- If the table is already booked, rollback the transaction
        ROLLBACK;
        SELECT CONCAT('Table ', tableNumber,' is already reserved. Booking declined') AS Status;
    END IF;

    -- Commit the transaction
    COMMIT;
END //

DELIMITER ;